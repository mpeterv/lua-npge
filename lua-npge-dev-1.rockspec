-- lua-npge, Nucleotide PanGenome explorer (Lua module)
-- Copyright (C) 2014-2015 Boris Nagaev
-- See the LICENSE file for terms of use.

package = "lua-npge"
version = "dev-1"
source = {
    url = "git://github.com/npge/lua-npge.git"
}
description = {
    summary = "Nucleotide PanGenome explorer (Lua module)",
    homepage = "https://github.com/npge/lua-npge",
    license = "MIT",
}
dependencies = {
    "lua >= 5.1",
    "alnbox",
    "luaposix",
}
 external_dependencies = {
    BOOST = {
        header = "boost/foreach.hpp"
    }
}
build = {
    type = "builtin",
    modules = {
        ['npge'] = 'src/npge/init.lua',
        ['npge.cpp'] = {
            sources = {
                "src/npge/cpp/lua_npge.cpp",
                "src/npge/cpp/model.cpp",
                "src/npge/cpp/throw_assert.cpp",
                "src/npge/cpp/strings.cpp",
                "src/npge/cpp/alignment.cpp",
            },
            libraries = {"stdc++"},
            incdirs = {"$(BOOST_INCDIR)"},
        },
        ['npge.config'] = 'src/npge/config.lua',
        ['npge.util'] = 'src/npge/util/init.lua',
        ['npge.util.arraysEqual'] = 'src/npge/util/arraysEqual.lua',
        ['npge.util.arraysLess'] = 'src/npge/util/arraysLess.lua',
        ['npge.util.asLines'] = 'src/npge/util/asLines.lua',
        ['npge.util.binary_search'] = 'src/npge/util/binary_search.lua',
        ['npge.util.clone'] = 'src/npge/util/clone.lua',
        ['npge.util.concat_arrays'] = 'src/npge/util/concat_arrays.lua',
        ['npge.util.ends_with'] = 'src/npge/util/ends_with.lua',
        ['npge.util.extract_value'] = 'src/npge/util/extract_value.lua',
        ['npge.util.file_exists'] = 'src/npge/util/file_exists.lua',
        ['npge.util.it_from_array'] = 'src/npge/util/it_from_array.lua',
        ['npge.util.loadstring'] = 'src/npge/util/loadstring.lua',
        ['npge.util.read_file'] = 'src/npge/util/read_file.lua',
        ['npge.util.readIt'] = 'src/npge/util/readIt.lua',
        ['npge.util.sandbox'] = 'src/npge/util/sandbox.lua',
        ['npge.util.split'] = 'src/npge/util/split.lua',
        ['npge.util.starts_with'] = 'src/npge/util/starts_with.lua',
        ['npge.util.timer'] = 'src/npge/util/timer.lua',
        ['npge.util.trim'] = 'src/npge/util/trim.lua',
        ['npge.util.unique'] = 'src/npge/util/unique.lua',
        ['npge.util.unpack'] = 'src/npge/util/unpack.lua',
        ['npge.util.write_it'] = 'src/npge/util/write_it.lua',
        ['npge.util.threads'] = 'src/npge/util/threads.lua',
        ['npge.model'] = 'src/npge/model/init.lua',
        ['npge.model.Block'] = 'src/npge/model/Block.lua',
        ['npge.model.BlockSet'] = 'src/npge/model/BlockSet.lua',
        ['npge.model.Fragment'] = 'src/npge/model/Fragment.lua',
        ['npge.model.Sequence'] = 'src/npge/model/Sequence.lua',
        ['npge.sequence'] = 'src/npge/sequence/init.lua',
        ['npge.sequence.fix_position'] = 'src/npge/sequence/fix_position.lua',
        ['npge.sequence.to_fasta'] = 'src/npge/sequence/to_fasta.lua',
        ['npge.fragment'] = 'src/npge/fragment/init.lua',
        ['npge.fragment.fragment_to_sequence'] = 'src/npge/fragment/fragment_to_sequence.lua',
        ['npge.fragment.has_pos'] = 'src/npge/fragment/has_pos.lua',
        ['npge.fragment.is_subfragment_of'] = 'src/npge/fragment/is_subfragment_of.lua',
        ['npge.fragment.reverse'] = 'src/npge/fragment/reverse.lua',
        ['npge.fragment.sequence_to_fragment'] = 'src/npge/fragment/sequence_to_fragment.lua',
        ['npge.fragment.subfragment'] = 'src/npge/fragment/subfragment.lua',
        ['npge.fragment.sub'] = 'src/npge/fragment/sub.lua',
        ['npge.block'] = 'src/npge/block/init.lua',
        ['npge.block.align'] = 'src/npge/block/align.lua',
        ['npge.block.consensus'] = 'src/npge/block/consensus.lua',
        ['npge.block.extend'] = 'src/npge/block/extend.lua',
        ['npge.block.good_subblocks'] = 'src/npge/block/good_subblocks.lua',
        ['npge.block.identity'] = 'src/npge/block/identity.lua',
        ['npge.block.is_good'] = 'src/npge/block/is_good.lua',
        ['npge.block.orient'] = 'src/npge/block/orient.lua',
        ['npge.block.reverse'] = 'src/npge/block/reverse.lua',
        ['npge.block.slice'] = 'src/npge/block/slice.lua',
        ['npge.block.unwind'] = 'src/npge/block/unwind.lua',
        ['npge.alignment'] = 'src/npge/alignment/init.lua',
        ['npge.alignment.align_rows'] = 'src/npge/alignment/align_rows.lua',
        ['npge.alignment.anchor'] = 'src/npge/alignment/anchor.lua',
        ['npge.alignment.complement'] = 'src/npge/alignment/complement.lua',
        ['npge.alignment.complement_rows'] = 'src/npge/alignment/complement_rows.lua',
        ['npge.alignment.identity'] = 'src/npge/alignment/identity.lua',
        ['npge.alignment.join'] = 'src/npge/alignment/join.lua',
        ['npge.alignment.left'] = 'src/npge/alignment/left.lua',
        ['npge.alignment.move_identical'] = 'src/npge/alignment/move_identical.lua',
        ['npge.alignment.to_atgcn_and_gap'] = 'src/npge/alignment/to_atgcn_and_gap.lua',
        ['npge.alignment.to_atgcn'] = 'src/npge/alignment/to_atgcn.lua',
        ['npge.alignment.unwind_row'] = 'src/npge/alignment/unwind_row.lua',
        ['npge.algo'] = 'src/npge/algo/init.lua',
        ['npge.algo.AddGoodBlast'] = 'src/npge/algo/AddGoodBlast.lua',
        ['npge.algo.Align'] = 'src/npge/algo/Align.lua',
        ['npge.algo.BlastHits'] = 'src/npge/algo/BlastHits.lua',
        ['npge.algo.Blast'] = 'src/npge/algo/Blast.lua',
        ['npge.algo.BlockSetToLua'] = 'src/npge/algo/BlockSetToLua.lua',
        ['npge.algo.BlocksWithoutOverlaps'] = 'src/npge/algo/BlocksWithoutOverlaps.lua',
        ['npge.algo.ConsensusSequences'] = 'src/npge/algo/ConsensusSequences.lua',
        ['npge.algo.Cover'] = 'src/npge/algo/Cover.lua',
        ['npge.algo.FilterGoodBlocks'] = 'src/npge/algo/FilterGoodBlocks.lua',
        ['npge.algo.Genomes'] = 'src/npge/algo/Genomes.lua',
        ['npge.algo.GoodSubblocks'] = 'src/npge/algo/GoodSubblocks.lua',
        ['npge.algo.HasOverlap'] = 'src/npge/algo/HasOverlap.lua',
        ['npge.algo.Join'] = 'src/npge/algo/Join.lua',
        ['npge.algo.LoadFromLua'] = 'src/npge/algo/LoadFromLua.lua',
        ['npge.algo.Merge'] = 'src/npge/algo/Merge.lua',
        ['npge.algo.NonCovered'] = 'src/npge/algo/NonCovered.lua',
        ['npge.algo.Orient'] = 'src/npge/algo/Orient.lua',
        ['npge.algo.PangenomeMaker'] = 'src/npge/algo/PangenomeMaker.lua',
        ['npge.algo.PrimaryHits'] = 'src/npge/algo/PrimaryHits.lua',
        ['npge.algo.ReadFromBs'] = 'src/npge/algo/ReadFromBs.lua',
        ['npge.algo.ReadSequencesFromFasta'] = 'src/npge/algo/ReadSequencesFromFasta.lua',
        ['npge.algo.ReAlign'] = 'src/npge/algo/ReAlign.lua',
        ['npge.algo.UnwindBlocks'] = 'src/npge/algo/UnwindBlocks.lua',
        ['npge.algo.Workers'] = 'src/npge/algo/Workers.lua',
        ['npge.algo.WriteSequencesToFasta'] = 'src/npge/algo/WriteSequencesToFasta.lua',
        ['npge.view'] = 'src/npge/view/init.lua',
        ['npge.view.BlockInConsole'] = 'src/npge/view/BlockInConsole.lua',
    },
    install = {
        bin = {
            "src/bin/MakePangenome",
        },
    },
}

